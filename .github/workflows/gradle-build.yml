name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "develop" ]
    tags: [ "v*" ]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - '**/*.adoc'
      - 'output/**'
      - '*.log'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - '**/*.adoc'
      - 'output/**'
      - '*.log'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

defaults:
  run:
    shell: bash

env:
  JAVA_VERSION: '25'

jobs:
  build-test-package:
    name: Build, Test & Package
    runs-on: windows-latest
    timeout-minutes: 15
    env:
      GITHUB_DEPENDENCY_GRAPH_ENABLED: false
    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        check-latest: true

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-read-only: ${{ github.event_name == 'pull_request' }}
        cache-cleanup: on-success
        dependency-graph: ${{ github.ref == 'refs/heads/main' && 'generate-and-submit' || 'generate' }}
        gradle-home-cache-strict-match: true
        gradle-home-cache-includes: |
          caches
          notifications
        gradle-home-cache-excludes: |
          caches/journal-1
          caches/**/gc.properties

    - name: Validate Gradle wrapper
      uses: gradle/actions/wrapper-validation@v4

    - name: Check dependency updates
      run: ./gradlew dependencyUpdates -Drevision=release

    - name: Upload dependency report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-updates-report
        path: build/dependencyUpdates/
        retention-days: 1
        compression-level: 1
        if-no-files-found: ignore

    - name: Assemble (no tests)
      run: ./gradlew assemble

    - name: Run tests
      run: ./gradlew test

    - name: Generate test report
      if: always()
      uses: dorny/test-reporter@v2
      with:
        name: Test Results (Java ${{ env.JAVA_VERSION }})
        path: '**/build/test-results/test/TEST-*.xml'
        reporter: java-junit
        fail-on-error: true

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-java${{ env.JAVA_VERSION }}
        path: |
          **/build/test-results/
          **/build/reports/tests/
        retention-days: 1
        compression-level: 1
        if-no-files-found: ignore

    - name: Build JPackage distribution
      run: ./gradlew :cli:jpackage

    - name: Upload distribution artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: distribution-jpackage
        path: |
          cli/build/jpackage/
        retention-days: 1
        compression-level: 1
        if-no-files-found: ignore
