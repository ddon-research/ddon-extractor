pluginManagement {
    plugins {
        id 'org.beryx.jlink' version '3.1.1'
        id 'org.javamodularity.moduleplugin' version '1.8.15'
        id 'io.freefair.lombok' version '9.0.0'
        id 'com.github.ben-manes.versions' version '0.52.0'
    }
}

plugins {
    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.9.0'
}

dependencyResolutionManagement {
    versionCatalogs {
        common {
            version('junit', '5.12.0')
        }
        log {
            version('orgSlf4j', '2.0.9')
            version('orgApacheLoggingLog4j', '2.24.3')

            // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
            library('slf4j-api', 'org.slf4j', 'slf4j-api').versionRef('orgSlf4j')
            // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
            library('log4j-api', 'org.apache.logging.log4j', 'log4j-api').versionRef('orgApacheLoggingLog4j')
            // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
            library('log4j-core', 'org.apache.logging.log4j', 'log4j-core').versionRef('orgApacheLoggingLog4j')
            // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j2-impl
            library('log4j-slf4j2-impl', 'org.apache.logging.log4j', 'log4j-slf4j2-impl').versionRef('orgApacheLoggingLog4j')

            bundle('logging-implementation', ['slf4j-api', 'log4j-api'])
            bundle('logging-runtimeOnly', ['log4j-core', 'log4j-slf4j2-impl'])
        }
        lib {
            version('comFasterxmlJackson', '2.18.3')
            version('orgBouncycastle', '1.80')
            version('orgApacheCommons', '3.17.0')

            // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml
            library('jackson-dataformat-yaml', 'com.fasterxml.jackson.dataformat', 'jackson-dataformat-yaml').versionRef('comFasterxmlJackson')
            // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-csv
            library('jackson-dataformat-csv', 'com.fasterxml.jackson.dataformat', 'jackson-dataformat-csv').versionRef('comFasterxmlJackson')
            // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
            library('jackson-databind', 'com.fasterxml.jackson.core', 'jackson-databind').versionRef('comFasterxmlJackson')
            // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
            library('jackson-core', 'com.fasterxml.jackson.core', 'jackson-core').versionRef('comFasterxmlJackson')
            // https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk18on
            library('bcprov-jdk18on', 'org.bouncycastle', 'bcprov-jdk18on').versionRef('orgBouncycastle')
            // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
            library('commons-lang3', 'org.apache.commons', 'commons-lang3').versionRef('orgApacheCommons')
        }
        libTest {
            version('commonsCodec', '1.18.0')
            version('commonsIo', '2.18.0')
            version('junitPioneer', '2.3.0')
            version('mockitoCore', '5.16.1')

            // https://mvnrepository.com/artifact/commons-codec/commons-codec
            library('commons-codec', 'commons-codec', 'commons-codec').versionRef('commonsCodec')
            // https://mvnrepository.com/artifact/commons-io/commons-io
            library('commons-io', 'commons-io', 'commons-io').versionRef('commonsIo')
            // https://mvnrepository.com/artifact/org.junit-pioneer/junit-pioneer
            library('junit-pioneer', 'org.junit-pioneer', 'junit-pioneer').versionRef('junitPioneer')
            // https://mvnrepository.com/artifact/org.mockito/mockito-core
            library('mockito-core', 'org.mockito', 'mockito-core').versionRef('mockitoCore')
        }
        cli {
            version('comFasterxmlJackson', '2.18.3')
            version('infoPicocli', '4.7.6')

            // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml
            library('jackson-dataformat-yaml', 'com.fasterxml.jackson.dataformat', 'jackson-dataformat-yaml').versionRef('comFasterxmlJackson')
            // https://mvnrepository.com/artifact/info.picocli/picocli
            library('picocli', 'info.picocli', 'picocli').versionRef('infoPicocli')
        }
    }
}

dependencyResolutionManagement {
    repositories {
        mavenCentral()
        mavenLocal()
    }
}

rootProject.name = 'ddon-extractor'

String[] modules = [
        'cli',
        'lib-api',
        'lib-common',
        'lib-season1',
        'lib-season2',
        'lib-season3',
        'lib-test'
]

include modules
