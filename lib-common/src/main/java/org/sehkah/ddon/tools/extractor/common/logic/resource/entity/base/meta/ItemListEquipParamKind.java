package org.sehkah.ddon.tools.extractor.common.logic.resource.entity.base.meta;

import java.util.Arrays;

public enum ItemListEquipParamKind {
    NONE(0x0),
    RESIST_POISON(0x01),
    RESIST_TORPOR(0x02),
    RESIST_TARRING(0x03),
    RESIST_BLIND(0x04),
    RESIST_SLEEP(0x05),
    RESIST_DRENCHING(0x06),
    RESIST_SKILL_STIFLING(0x07),
    RESIST_FRAIL(0x08),
    RESIST_PETRIFICATION(0x09),
    RESIST_GOLDEN(0x0A),
    RESIST_CATCHING_FIRE(0x0B),
    RESIST_FROZEN_SOLID(0x0C),
    RESIST_SHOCK(0x0D),
    RESIST_HOLY_DRAIN(0x0E),
    RESIST_KNOCKOUT(0x0F),
    RESIST_CURSE(0x10),
    RESIST_FIRE_RES_DOWN(0x11),
    RESIST_ICE_RES_DOWN(0x12),
    RESIST_THUNDER_RES_DOWN(0x13),
    RESIST_HOLY_RES_DOWN(0x14),
    RESIST_DARK_RES_DOWN(0x15),
    RESIST_PHYS_ATK_DOWN(0x16),
    RESIST_PHYS_DEF_DOWN(0x17),
    RESIST_MAG_ATK_DOWN(0x18),
    RESIST_MAG_DEF_DOWN(0x19),
    RESIST_CORRUPTION(0x1A),
    RESIST_ITEM_SEAL(0x1B),
    MAGMA_RESIST(0x1C),
    HEALING_POWER(0x1D),
    BLOCKING_STAMINA_REDUCTION(0x1E),
    MAX_FORCE_STOCK(0x1F),
    MAX_LOADED_ARROWS(0x20),
    FIRE_RESIST(0x27),
    ICE_RESIST(0x28),
    THUNDER_RESIST(0x29),
    HOLY_RESIST(0x2A),
    DARK_RESIST(0x2B),
    INFLICT_POISON(0x2C),
    INFLICT_TORPOR(0x2D),
    INFLICT_TARRING(0x2E),
    INFLICT_BLIND(0x2F),
    INFLICT_SLEEP(0x30),
    INFLICT_DRENCHING(0x31),
    INFLICT_SKILL_STIFLING(0x32),
    INFLICT_FRAIL(0x33),
    INFLICT_PETRIFICATION(0x34),
    INFLICT_GOLDEN(0x35),
    INFLICT_CATCHING_FIRE(0x36),
    INFLICT_FROZEN_SOLID(0x37),
    INFLICT_SHOCK(0x38),
    INFLICT_HOLY_DRAIN(0x39),
    INFLICT_FIRE_RES_DOWN(0x3A),
    INFLICT_ICE_RES_DOWN(0x3B),
    INFLICT_THUNDER_RES_DOWN(0x3C),
    INFLICT_HOLY_RES_DOWN(0x3D),
    INFLICT_DARK_RES_DOWN(0x3E),
    INFLICT_PHYS_ATK_DOWN(0x3F),
    INFLICT_PHYS_DEF_DOWN(0x40),
    INFLICT_MAG_ATK_DOWN(0x41),
    INFLICT_MAG_DEF_DOWN(0x42),
    KNOCKOUT_POWER(0x43),
    MAX_HEALTH(0x44),
    MAX_STAMINA(0x45),
    BLOW_POWER_S(0x54),
    BLOW_POWER_B(0x55),
    ENDURANCE(0x56),
    GUARD_POWER(0x57),
    DEMIHUMAN_SLAYER(0x59),
    BEAST_SLAYER(0x5A),
    OGRE_SLAYER(0x5B),
    UNDEAD_SLAYER(0x5C),
    SKELETON_SLAYER(0x5D),
    WINGED_SLAYER(0x5E),
    GIANT_SLAYER(0x5F),
    SPIRIT_SLAYER(0x61),
    GOLEM_SLAYER(0x63),
    HUMAN_SLAYER(0x64),
    ALCHEMY_SLAYER(0x65),
    DRAGON_SLAYER(0x66),
    DEMON_SLAYER(0x67),
    CORRUPTED_SLAYER(0x68),
    WARREADY_SLAYER(0x69),
    KIND_TYPE_UNKNOWN(Integer.MAX_VALUE);

    public final long value;

    ItemListEquipParamKind(long value) {
        this.value = value;
    }

    public static ItemListEquipParamKind of(long value) {
        return Arrays.stream(ItemListEquipParamKind.values()).filter(itemListEquipParamS8Kind -> itemListEquipParamS8Kind.value == value).findFirst().orElse(KIND_TYPE_UNKNOWN);
    }
}
