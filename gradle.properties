##
# Gradle properties
##
org.gradle.caching=true
#org.gradle.caching=(true,false)
#When set to true, Gradle will reuse task outputs from any previous build when possible, resulting in much faster builds.
#Default is false; the build cache is not enabled.
#org.gradle.caching.debug=(true,false)
#When set to true, individual input property hashes and the build cache key for each task are logged on the console.
#Default is false.
org.gradle.configuration-cache=false
#org.gradle.configuration-cache=(true,false)
#Enables configuration caching. Gradle will try to reuse the build configuration from previous builds.
#Default is false.
org.gradle.configureondemand=true
#org.gradle.configureondemand=(true,false)
#Enables incubating configuration-on-demand, where Gradle will attempt to configure only necessary projects.
#Default is false.
#org.gradle.console=(auto,plain,colored,rich,verbose)
#Customize console output coloring or verbosity.
#Default depends on how Gradle is invoked.
#org.gradle.continue=(true,false)
#If enabled, continue task execution after a task failure, else stop task execution after a task failure.
#Default is false.
org.gradle.daemon=true
#org.gradle.daemon=(true,false)
#When set to true the Gradle Daemon is used to run the build.
#Default is true.
#org.gradle.daemon.idletimeout=(# of idle millis)
#Gradle Daemon will terminate itself after a specified number of idle milliseconds.
#Default is 10800000 (3 hours).
#org.gradle.debug=(true,false)
#When set to true, Gradle will run the build with remote debugging enabled, listening on port 5005. Note that this is equivalent to adding -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005 to the JVM command line and will suspend the virtual machine until a debugger is attached.
#Default is false.
#org.gradle.java.home=(path to JDK home)
#Specifies the Java home for the Gradle build process. The value can be set to either a jdk or jre location; however, using a JDK is safer depending on what your build does. This does not affect the version of Java used to launch the Gradle client VM.
#You can also control the JVM used to run Gradle itself using the Daemon JVM criteria.
#Default is derived from your environment (JAVA_HOME or the path to java) if the setting is unspecified.
org.gradle.jvmargs='-Dfile.encoding=UTF-8'
#org.gradle.jvmargs=(JVM arguments)
#Specifies the JVM arguments used for the Gradle Daemon. The setting is particularly useful for configuring JVM memory settings for build performance. This does not affect the JVM settings for the Gradle client VM.
#Default is -Xmx512m "-XX:MaxMetaspaceSize=384m".
#org.gradle.logging.level=(quiet,warn,lifecycle,info,debug)
#When set to quiet, warn, info, or debug, Gradle will use this log level. The values are not case-sensitive.
#Default is lifecycle level.
org.gradle.parallel=true
#org.gradle.parallel=(true,false)
#When configured, Gradle will fork up to org.gradle.workers.max JVMs to execute projects in parallel.
#Default is false.
#org.gradle.priority=(low,normal)
#Specifies the scheduling priority for the Gradle daemon and all processes launched by it.
#Default is normal.
#org.gradle.projectcachedir=(directory)
#Specify the project-specific cache directory. Defaults to .gradle in the root project directory."
#Default is .gradle.
#org.gradle.problems.report=(true|false)
#Enable (true) or disable (false) the generation of build/reports/problems-report.html. true is the default. The report is generated with problems provided to the Problems API.
org.gradle.unsafe.isolated-projects=false
#org.gradle.unsafe.isolated-projects=(true,false)
#Enables project isolation, which enables configuration caching.
#Default is false.
#org.gradle.vfs.verbose=(true,false)
#Configures verbose logging when watching the file system.
#Default is false.
org.gradle.vfs.watch=true
#org.gradle.vfs.watch=(true,false)
#Toggles watching the file system. When enabled, Gradle reuses information it collects about the file system between builds.
#Default is true on operating systems where Gradle supports this feature.
org.gradle.warning.mode=summary
#org.gradle.warning.mode=(all,fail,summary,none)
#When set to all, summary, or none, Gradle will use different warning type display.
#Default is summary.
#org.gradle.workers.max=(max # of worker processes)
#When configured, Gradle will use a maximum of the given number of workers.
#Default is the number of CPU processors.

##
# Project properties
##
group=org.sehkah
version=1.0
sourceCompatibility=25
targetCompatibility=25
