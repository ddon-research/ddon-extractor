package org.sehkah.ddon.tools.extractor.season2.logic.resource.entity.season3.game_common.meta;

import java.util.Arrays;

public enum ObjConditionOcdType {
    OCD_NONE(0x0),
    OCD_GOOD_PHYS_ATK(0x1),
    OCD_GOOD_PHYS_DEF(0x2),
    OCD_GOOD_MGC_ATK(0x3),
    OCD_GOOD_MGC_DEF(0x4),
    OCD_GOOD_POWER(0x5),
    OCD_GOOD_ENDURANCE(0x6),
    OCD_GOOD_GUTS(0x7),
    OCD_GOOD_FIRE_DEF(0x8),
    OCD_GOOD_ICE_DEF(0x9),
    OCD_GOOD_ELECTRIC_DEF(0xA),
    OCD_GOOD_HOLY_DEF(0xB),
    OCD_GOOD_DARK_DEF(0xC),
    OCD_GOOD_ABILITY098(0xD),
    OCD_GOOD_ICE_ATK(0xE),
    OCD_GOOD_ELECTRIC_ATK(0xF),
    OCD_GOOD_HORY_ATK(0x10),
    OCD_GOOD_DARK_ATK(0x11),
    OCD_GOOD_HIT_POINT(0x12),
    OCD_GOOD_STAMINA(0x13),
    OCD_GOOD_MIND_WEAK(0x14),
    OCD_GOOD_WEIGHT(0x15),
    OCD_GOOD_CRAFT_TIME(0x16),
    OCD_GOOD_CRAFT_LUCK(0x17),
    OCD_GOOD_EXP_LUCK(0x18),
    OCD_GOOD_MONEY_LUCK(0x19),
    OCD_GOOD_EROSION_ENDURANCE(0x1A),
    OCD_GOOD_ABILITY370(0x1B),
    OCD_BAD_POISON(0x1001),
    OCD_BAD_SLOW(0x1002),
    OCD_BAD_SLEEP(0x1003),
    OCD_BAD_FAINT(0x1004),
    OCD_BAD_WET(0x1005),
    OCD_BAD_OIL(0x1006),
    OCD_BAD_SEAL(0x1007),
    OCD_BAD_CURSE(0x1008),
    OCD_BAD_SOFT_BODY(0x1009),
    OCD_BAD_STONE(0x100A),
    OCD_BAD_GOLD(0x100B),
    OCD_BAD_SPREAD(0x100C),
    OCD_BAD_FREEZE(0x100D),
    OCD_BAD_ELECTRIC(0x100E),
    OCD_BAD_HOLY_ABSORP(0x100F),
    OCD_BAD_BLIND(0x1010),
    OCD_BAD_FIRE_DEF(0x1011),
    OCD_BAD_ICE_DEF(0x1012),
    OCD_BAD_ELECTRIC_DEF(0x1013),
    OCD_BAD_HOLY_DEF(0x1014),
    OCD_BAD_DARK_DEF(0x1015),
    OCD_BAD_PHYS_ATK(0x1016),
    OCD_BAD_PHYS_DEF(0x1017),
    OCD_BAD_MGC_ATK(0x1018),
    OCD_BAD_MGC_DEF(0x1019),
    OCD_BAD_SLEEP_CHANCE_TIME(0x101A),
    OCD_BAD_EROSION_LV1(0x101B),
    OCD_BAD_EROSION_LV2(0x101C),
    OCD_BAD_EROSION_LV3(0x101D),
    OCD_BAD_EROSION_LVMAX(0x101E),
    OCD_BAD_ITEM_SEAL(0x101F),
    OCD_ENCHANT_FIRE(0x2001),
    OCD_ENCHANT_ICE(0x2002),
    OCD_ENCHANT_THUNDER(0x2003),
    OCD_ENCHANT_HOLY(0x2004),
    OCD_ENCHANT_DARK(0x2005),
    OCD_HUMAN_ATTACK_CIRCLE(0x3001),
    OCD_HUMAN_DEFENSE_CIRCLE(0x3002),
    OCD_HUMAN_LANTHANUM(0x3003),
    OCD_HUMAN_EXPLOSIVE_ARROW(0x3004),
    OCD_HUMAN_ELEMENT_COVER(0x3005),
    OCD_HUMAN_WEAKENING(0x3006),
    OCD_HUMAN_GOLD_STONE_BUFF(0x3007),
    OCD_HUMAN_IRON_CIRCLE(0x3008),
    OCD_HUMAN_SOLACE_CIRCLE(0x3009),
    OCD_ENEMY_PHYS_MAGIC_CHANGE(0x4001),
    OCD_ENEMY_EROSION_CANCEL(0x4002),
    OCD_ENEMY_RAGE_SHRINK_AFTER_CHANCE(0x4003);


    public final long value;

    ObjConditionOcdType(long value) {
        this.value = value;
    }

    public static ObjConditionOcdType of(long value) {
        return Arrays.stream(ObjConditionOcdType.values()).filter(t -> t.value == value).findFirst().orElse(null);
    }
}
