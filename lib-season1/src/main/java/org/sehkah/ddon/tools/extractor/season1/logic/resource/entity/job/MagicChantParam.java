package org.sehkah.ddon.tools.extractor.season1.logic.resource.entity.job;

import org.sehkah.ddon.tools.extractor.lib.common.datatype.Matrix;
import org.sehkah.ddon.tools.extractor.lib.common.serialization.MetaInformation;
import org.sehkah.ddon.tools.extractor.lib.common.util.BitUtil;
import org.sehkah.ddon.tools.extractor.season1.logic.resource.entity.job.meta.MagicChantCommandLevelType;
import org.sehkah.ddon.tools.extractor.season1.logic.resource.entity.job.meta.MagicChantEndType;
import org.sehkah.ddon.tools.extractor.season1.logic.resource.entity.job.meta.MagicChantShotOption;

import java.util.List;
import java.util.Set;

public record MagicChantParam(
        long ChantMot,
        float ChantTime_Gi,
        long EndType,
        @MetaInformation
        Set<MagicChantEndType> EndTypes,
        boolean IsChant2,
        long Chant2Mot,
        float Chant2Time_Gi,
        long SetType,
        boolean IsConst,
        int JointNo,
        long ShotOption,
        @MetaInformation
        MagicChantShotOption ShotOptionType,
        Matrix ShotPosOffset,
        Matrix NoneLockOnPos,
        Matrix NoneLockOnPosNext,
        long ShotMot,
        boolean IsMotLoop,
        float ShotLoopingTime,
        boolean IsUseShotLimitXAngle,
        float ShotLimitXAngle,
        long EndMotion,
        long ChantCameraNumber,
        long ShotCameraNumber,
        long EndCameraNumber,
        float ShlBornFrame,
        long ShlGroupNumber,
        long ShlIndexNumber,
        long ShlGroupNumberNext,
        long ShlIndexNumberNext,
        boolean IsCanMove,
        long ChantAttribute,
        boolean IsUseChantCommand,
        int ChantCommandLevel,
        @MetaInformation
        MagicChantCommandLevelType ChantCommandLevelType,
        int MagicCommandNo,
        boolean IsUseAutoRock,
        float AutoRockRange,
        float AutoRockAngle,
        int Chant2EffectIndex,
        int Chant2EffectNumber,
        float Chant2EffectFrame,
        float Chant2SeFrame,
        boolean IsSetCustomChantTime,
        List<Float> CustomChantTime_Gi,
        boolean IsAimTargetSpot,
        float AimTargetSpotMaxRange,
        float AimTargetSpotMinRange,
        boolean IsNoChantSe,
        float AddHealHate
) {
    public MagicChantParam(long chantMot, float chantTime_Gi, long endType, boolean isChant2, long chant2Mot,
                           float chant2Time_Gi, long setType, boolean isConst, int jointNo, long shotOption,
                           Matrix shotPosOffset, Matrix noneLockOnPos, Matrix noneLockOnPosNext, long shotMot,
                           boolean isMotLoop, float shotLoopingTime, boolean isUseShotLimitXAngle,
                           float shotLimitXAngle, long endMotion, long chantCameraNumber, long shotCameraNumber,
                           long endCameraNumber, float shlBornFrame, long shlGroupNumber, long shlIndexNumber,
                           long shlGroupNumberNext, long shlIndexNumberNext, boolean isCanMove, long chantAttribute,
                           boolean isUseChantCommand, int chantCommandLevel, int magicCommandNo, boolean isUseAutoRock,
                           float autoRockRange, float autoRockAngle, int chant2EffectIndex, int chant2EffectNumber,
                           float chant2EffectFrame, float chant2SeFrame, boolean isSetCustomChantTime,
                           List<Float> customChantTime_Gi, boolean isAimTargetSpot, float aimTargetSpotMaxRange,
                           float aimTargetSpotMinRange, boolean isNoChantSe, float addHealHate) {
        this(chantMot,
                chantTime_Gi,
                endType, BitUtil.extractBitSetUnsignedIntegerFlag(MagicChantEndType::of, i -> 1 << i, endType),
                isChant2,
                chant2Mot,
                chant2Time_Gi,
                setType,
                isConst,
                jointNo,
                shotOption, MagicChantShotOption.of(shotOption),
                shotPosOffset,
                noneLockOnPos,
                noneLockOnPosNext,
                shotMot,
                isMotLoop,
                shotLoopingTime,
                isUseShotLimitXAngle,
                shotLimitXAngle,
                endMotion,
                chantCameraNumber,
                shotCameraNumber,
                endCameraNumber,
                shlBornFrame,
                shlGroupNumber,
                shlIndexNumber,
                shlGroupNumberNext,
                shlIndexNumberNext,
                isCanMove,
                chantAttribute,
                isUseChantCommand,
                chantCommandLevel, MagicChantCommandLevelType.of(chantCommandLevel),
                magicCommandNo,
                isUseAutoRock,
                autoRockRange,
                autoRockAngle,
                chant2EffectIndex,
                chant2EffectNumber,
                chant2EffectFrame,
                chant2SeFrame,
                isSetCustomChantTime,
                customChantTime_Gi,
                isAimTargetSpot,
                aimTargetSpotMaxRange,
                aimTargetSpotMinRange,
                isNoChantSe,
                addHealHate);
    }
}
