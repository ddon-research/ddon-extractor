package org.sehkah.ddon.tools.extractor.season3.resource.entity.game_common.meta;

import java.util.Arrays;

public enum AIPawnAutoMotionGroupType {
    AIPAWN_AUTOMOT_GROUP_INVITED(0x0),
    AIPAWN_AUTOMOT_GROUP_NONE(0x1),
    AIPAWN_AUTOMOT_GROUP_GREET(0x2),
    AIPAWN_AUTOMOT_GROUP_BOW(0x3),
    AIPAWN_AUTOMOT_GROUP_SALUTE(0x4),
    AIPAWN_AUTOMOT_GROUP_WELCOME(0x5),
    AIPAWN_AUTOMOT_GROUP_NOD(0x6),
    AIPAWN_AUTOMOT_GROUP_HEADSHAKE(0x7),
    AIPAWN_AUTOMOT_GROUP_REJOICE(0x8),
    AIPAWN_AUTOMOT_GROUP_ANGER(0x9),
    AIPAWN_AUTOMOT_GROUP_CRY(0xA),
    AIPAWN_AUTOMOT_GROUP_LAUGH(0xB),
    AIPAWN_AUTOMOT_GROUP_SAD(0xC),
    AIPAWN_AUTOMOT_GROUP_SHY(0xD),
    AIPAWN_AUTOMOT_GROUP_SURPRISE(0xE),
    AIPAWN_AUTOMOT_GROUP_DISAPPOINT(0xF),
    AIPAWN_AUTOMOT_GROUP_THINK(0x10),
    AIPAWN_AUTOMOT_GROUP_CHAGRIN(0x11),
    AIPAWN_AUTOMOT_GROUP_SULK(0x12),
    AIPAWN_AUTOMOT_GROUP_HANDSHAKE(0x13),
    AIPAWN_AUTOMOT_GROUP_BECKONING(0x14),
    AIPAWN_AUTOMOT_GROUP_PRAISE(0x15),
    AIPAWN_AUTOMOT_GROUP_APPLAUD(0x16),
    AIPAWN_AUTOMOT_GROUP_CHEER(0x17),
    AIPAWN_AUTOMOT_GROUP_THREAT(0x18),
    AIPAWN_AUTOMOT_GROUP_SEDUCE(0x19),
    AIPAWN_AUTOMOT_GROUP_OVERLOOK(0x1A),
    AIPAWN_AUTOMOT_GROUP_POINTED(0x1B),
    AIPAWN_AUTOMOT_GROUP_YELL(0x1C),
    AIPAWN_AUTOMOT_GROUP_ROAR(0x1D),
    AIPAWN_AUTOMOT_GROUP_KACHIDOKI(0x1E),
    AIPAWN_AUTOMOT_GROUP_PRAY(0x1F),
    AIPAWN_AUTOMOT_GROUP_KNEEL(0x20),
    AIPAWN_AUTOMOT_GROUP_FALLDOWN(0x21),
    AIPAWN_AUTOMOT_GROUP_SIT(0x22),
    AIPAWN_AUTOMOT_GROUP_SLEEP(0x23),
    AIPAWN_AUTOMOT_GROUP_RELAX(0x24),
    AIPAWN_AUTOMOT_GROUP_STRETCH(0x25),
    AIPAWN_AUTOMOT_GROUP_DANCE(0x26),
    AIPAWN_AUTOMOT_GROUP_TRAINING(0x27),
    AIPAWN_AUTOMOT_GROUP_HAPPY(0x28),
    AIPAWN_AUTOMOT_GROUP_GREET_2(0x29),
    AIPAWN_AUTOMOT_GROUP_SNOOZE(0x2A),
    AIPAWN_AUTOMOT_GROUP_HAPPY_GREET(0x2B);


    public final long value;

    AIPawnAutoMotionGroupType(long value) {
        this.value = value;
    }

    public static AIPawnAutoMotionGroupType of(long value) {
        return Arrays.stream(AIPawnAutoMotionGroupType.values()).filter(t -> t.value == value).findFirst().orElse(null);
    }
}
